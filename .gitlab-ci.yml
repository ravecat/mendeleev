workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - test
  - release
  - deploy

.docker-login: &docker-login
  - docker -v
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

test:lint:
  image: node:15.8-alpine3.13
  stage: test
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9.]+$/'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - when: on_success
  script:
    - yarn
    - yarn test:type
    - yarn test:commit
    - yarn test:lint
    - yarn test:prettier

test:app:
  image: node:15.8-alpine3.13
  stage: test
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9.]+$/'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: never
    - when: on_success
  script:
    - yarn
    - yarn test

release:
  image: ${REGISTRY}/${REGISTRY_NAMESPACE}/node:15.7-git2.18.4
  stage: release
  tags:
    - docker
  variables:
    GITLAB_TOKEN: $GITLAB_CI_BOT_TOKEN
    GIT_AUTHOR_NAME: $GITLAB_CI_BOT_ID
    GIT_AUTHOR_EMAIL: $GITLAB_CI_BOT_EMAIL
    GIT_COMMITTER_NAME: $GITLAB_CI_BOT_ID
    GIT_COMMITTER_EMAIL: $GITLAB_CI_BOT_EMAIL
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_COMMIT_MESSAGE !~ /^build\(release\)|ci[\(:]/'
  script:
    - yarn 
    - yarn release

deploy:
  stage: deploy
  image: ${REGISTRY}/${REGISTRY_NAMESPACE}/node:15.7-docker-compose1.27
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_COMMIT_MESSAGE =~ /^build\(release\)|ci[\(:]/'
  before_script:
    - *docker-login
  variables:
    PROJECT: mendeleev
    HOST: ${DOMAIN_PATH}.${DOMAIN_NAME}
    DOCKER_GATEWAY_NETWORK: $DOCKER_GATEWAY_NETWORK
    DB_HOST: host.docker.internal
    RELEASE: master
  script:
    - "export VERSION=$(awk -F'\"' '/\"version\": \".+\"/{ print $4; exit; }' package.json)"
    - echo "Build image $CI_REGISTRY_IMAGE:$VERSION"
    - docker build --no-cache -t $CI_REGISTRY_IMAGE:$VERSION .
    - docker push $CI_REGISTRY_IMAGE:$VERSION
    - export IMAGE="${CI_REGISTRY_IMAGE}:${VERSION}"
    - docker-compose up -d --build